syntax = "proto3";

message InitNDIDParams  {
  string node_id = 1;
  string public_key = 2;
  string master_public_key = 3;
}

message RegisterNodeParams  {
  string node_id = 1;
  string public_key = 2;
  string master_public_key = 3;
  string node_name = 4;
  string role = 5;
  double max_ial = 6;
  double max_aal = 7;
}

message UpdateNodeParams {
  string public_key = 1;
  string master_public_key = 2;
}

message SetValidatorParams  {
  string public_key = 1;
  int64 power = 2;
}

message SetPriceFuncParams  {
  string func = 1;
  double price = 2;
}

message GetPriceFuncParams  {
  string func = 1;
}

message SetNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message AddNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message ReduceNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message GetNodeTokenParams  {
  string node_id = 1;
}

message CreateRequestParams {
  string request_id = 1;
  int64 min_idp = 2;
  double min_aal = 3;
  double min_ial = 4;
  int64 request_timeout = 5;
  repeated DataRequestInParams data_request_list = 6;
  string request_message_hash = 7;
  repeated ResponseInParams response_list = 8;
  bool closed = 9;
  bool timed_out = 10;
  bool can_add_accessor = 11;
  string owner = 12;
  int64 mode = 13;
}

message DataRequestInParams {
  string service_id = 1;
  repeated string as_id_list = 2;
  int64 min_as = 3;
  string request_Params_hash = 4;
  repeated string answered_as_id_list = 5;
  repeated string received_data_from_list = 6;
}

message ResponseInParams {
  double ial = 1;
  double aal = 2;
  string status = 3;
  string signature = 4;
  string identity_proof = 5;
  string private_proof_hash = 6;
  string idp_id = 7;
  string valid_proof = 8;
  string valid_ial = 9;
  string valid_signature = 10;
}

message CloseRequestParams {
  string request_id = 1;
  repeated ResponseValid response_valid_list = 2;
}

message TimeOutRequestParams {
  string request_id = 1;
  repeated ResponseValid response_valid_list = 2;
}

message ResponseValid {
  string idp_id = 1;
  oneof valid_proof {
    bool valid_proof_bool = 2;
  }
  oneof valid_ial {
    bool valid_ial_bool = 3;
  }
  oneof valid_signature {
    bool valid_signature_bool = 4;
  }
}

message SetDataReceivedParams {
  string request_id = 1;
  string service_id = 2;
  string as_id = 3;
}

message SignDataParams {
  string service_id = 1;
  string request_id = 2;
  string signature = 3;
}

message RegisterServiceDestinationParams {
  string service_id = 1;
  double min_ial = 2;
  double min_aal = 3;
}

message UpdateServiceDestinationParams {
  string service_id = 1;
  double min_ial = 2;
  double min_aal = 3;
}

message DisableServiceDestinationParams {
	string service_id = 1;
}