syntax = "proto3";

message InitNDIDParams  {
  string node_id = 1;
  string public_key = 2;
  string master_public_key = 3;
}

message RegisterNodeParams  {
  string node_id = 1;
  string public_key = 2;
  string master_public_key = 3;
  string node_name = 4;
  string role = 5;
  double max_ial = 6;
  double max_aal = 7;
}

message UpdateNodeParams {
  string public_key = 1;
  string master_public_key = 2;
}

message SetValidatorParams  {
  string public_key = 1;
  int64 power = 2;
}

message SetPriceFuncParams  {
  string func = 1;
  double price = 2;
}

message GetPriceFuncParams  {
  string func = 1;
}

message SetNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message AddNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message ReduceNodeTokenParams  {
  string node_id = 1;
  double amount = 2;
}

message GetNodeTokenParams  {
  string node_id = 1;
}

message CreateRequestParams {
  string request_id = 1;
  int64 min_idp = 2;
  double min_aal = 3;
  double min_ial = 4;
  int64 request_timeout = 5;
  repeated DataRequestInParams data_request_list = 6;
  string request_message_hash = 7;
  int64 mode = 13;
}

message DataRequestInParams {
  string service_id = 1;
  repeated string as_id_list = 2;
  int64 min_as = 3;
  string request_Params_hash = 4;
  repeated string answered_as_id_list = 5;
  repeated string received_data_from_list = 6;
}

message CloseRequestParams {
  string request_id = 1;
  repeated ResponseValid response_valid_list = 2;
}

message TimeOutRequestParams {
  string request_id = 1;
  repeated ResponseValid response_valid_list = 2;
}

message ResponseValid {
  string idp_id = 1;
  oneof valid_proof_bool {
    bool valid_proof = 2;
  }
  oneof valid_ial_bool {
    bool valid_ial = 3;
  }
  oneof valid_signature_bool {
    bool valid_signature = 4;
  }
}

message SetDataReceivedParams {
  string request_id = 1;
  string service_id = 2;
  string as_id = 3;
}

message SignDataParams {
  string service_id = 1;
  string request_id = 2;
  string signature = 3;
}

message RegisterServiceDestinationParams {
  string service_id = 1;
  double min_ial = 2;
  double min_aal = 3;
}

message UpdateServiceDestinationParams {
  string service_id = 1;
  double min_ial = 2;
  double min_aal = 3;
}

message DisableServiceDestinationParams {
	string service_id = 1;
}

message GetUsedTokenReportParams {
  string node_id = 1;
}

message CreateIdentityParams {
  string accessor_id = 1;
  string accessor_type = 2;
  string accessor_public_key = 3;
  string accessor_group_id = 4;
}

message AccessorMethodParams {
  string accessor_id = 1;
  string accessor_type = 2;
  string accessor_public_key = 3;
  string accessor_group_id = 4;
  string request_id = 5;
}

message ClearRegisterMsqDestinationTimeoutParams {
  string hash_id = 1;
}

message DeclareIdentityProofParams {
  string identity_proof = 1;
  string request_id = 2;
}

message UpdateIdentityParams {
  string hash_id = 1;
  double ial = 2;
}

message CreateIdpResponseParams {
  string request_id = 1;
  double ial = 2;
  double aal = 3;
  string status = 4;
  string signature = 5;
  string identity_proof = 6;
  string private_proof_hash = 7;
}

message User {
  string hash_id = 1;
  double ial = 2;
  bool first = 3;
}

message RegisterMsqDestinationParams {
  repeated User users = 1;
}

message AddNamespaceParams {
  string namespace = 1;
  string description = 2;
  bool active = 3;
}

message DisableNamespaceParams {
  string namespace = 1;
}

message AddServiceParams {
  string service_id = 1;
  string service_name = 2;
}

message DisableServiceParams {
  string service_id = 1;
}

message UpdateNodeByNDIDParams {
  string node_id = 1;
  double max_ial = 2;
  double max_aal = 3;
  string node_name = 4;
}

message UpdateServiceParams {
  string service_id = 1;
  string service_name = 2;
}

message DisableNodeParams {
  string node_id = 1;
}

message RegisterServiceDestinationByNDIDParams {
  string service_id = 1;
  string node_id = 2;
}

message DisableServiceDestinationByNDIDParams {
  string service_id = 1;
  string node_id = 2;
}

message TimeOutBlockRegisterMsqDestinationParams {
  int64 time_out_block = 1;
}

message AddNodeToProxyNodeParams {
  string node_id = 1;
  string proxy_node_id = 2;
  string config = 3;
}

message UpdateNodeProxyNodeParams {
  string node_id = 1;
  string proxy_node_id = 2;
  string config = 3;
}

message RemoveNodeFromProxyNodeParams {
  string node_id = 1;
}

message RegisterMsqAddressParams {
  string node_id = 1;
  repeated MsqAddress addresses = 2;
}

message MsqAddress {
  string ip = 1;
  int64 port = 2;
}

message GetNodeMasterPublicKeyParams {
  string node_id = 1;
}

message GetNodePublicKeyParams {
  string node_id = 1;
}

message GetNodeIDListParams {
  string role = 1;
}

message GetNodesBehindProxyNodeParams {
  string proxy_node_id = 1;
}

message GetAsNodesByServiceIdParams {
  string service_id = 1;
  repeated string node_id_list = 2;
}

message GetIdpNodesParams {
  string hash_id = 1;
  double min_ial = 2;
  double min_aal = 3;
  repeated string node_id_list = 4;
}

message GetServicesByAsIDParams {
  string as_id = 1;
}

message GetIdentityProofParams {
  string idp_id = 1;
  string request_id = 2;
}

message GetDataSignatureParams {
  string node_id = 1;
  string service_id = 2;
  string request_id = 3;
}

message GetIdentityInfoParams {
  string hash_id = 1;
  string node_id = 2;
}

message GetNodeInfoParams {
  string node_id = 1;
}

message CheckExistingAccessorGroupIDParams {
  string accessor_group_id = 1;
}

message CheckExistingAccessorIDParams {
  string accessor_id = 1;
}

message GetAccessorKeyParams {
  string accessor_id = 1;
}

message GetAccessorGroupIDParams {
  string accessor_id = 1;
}

message CheckExistingIdentityParams {
  string hash_id = 1;
}

message GetServiceDetailParams {
  string service_id = 1;
}

message GetRequestParams {
  string request_id = 1;
}

message GetMsqAddressParams {
  string node_id = 1;
}